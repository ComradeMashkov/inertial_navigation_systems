plot(cars)
plot(cars)
plot(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
V_E <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
)
phi <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
) + phi_0
lambda <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
) + lambda_0
print(norm(gyr_B))
print(norm(gyr_B))
source("Z:/dev/inertial_navigation_systems/hw/main.r")
source("Z:/dev/inertial_navigation_systems/hw/main.r")
source("Z:/dev/inertial_navigation_systems/hw/main.r")
install.packages('languageserver', repos='https://cran.r-project.org/')
install.packages("languageserver", repos = "https://cran.r-project.org/")
rmarkdown::pandoc_version()
tinytex::install_tinytex()
tinytex::install_tinytex()
install.packages("radix")
install.packages("distill")
g_ef <- 9.815
a_ef <- 6378137
b_ef <- 6356752.3
e_ef <- (a^2 - b^2) / a^2
g_ef <- 9.815
a_ef <- 6378137
b_ef <- 6356752.3
e_ef <- (a_ef^2 - b_ef^2) / a_ef^2
U_ef <- 2 * pi / (24 * 60 * 60)
H_ef <- 0
g_ef <- 9.815
a_ef <- 6378137
b_ef <- 6356752.3
e_ef <- (a_ef^2 - b_ef^2) / a_ef^2
U_ef <- 2 * pi / (24 * 60 * 60)
H_ef <- 0
plot(pressure)
nu_N <- 10
h_N1 <- 1 / nu_N
h_N3 <- h_N1
t_f <- 2 * 60 * 60
t <- seq(
from = 0,
to = t_f
by = h_N1
nu_N <- 10
h_N1 <- 1 / nu_N
h_N3 <- h_N1
t_f <- 2 * 60 * 60
t <- seq(
from = 0,
to = t_f,
by = h_N1
)
nu_N <- 10
h_N1 <- 1 / nu_N
h_N3 <- h_N1
t_f <- 2 * 60 * 60
t <- seq(
from = 0,
to = t_f,
by = h_N1
)
inaccuracies_enabled <- 1
b <- 25 * g * 1e-6
g_ef <- 9.815
a_ef <- 6378137
b_ef <- 6356752.3
e_ef <- (a_ef^2 - b_ef^2) / a_ef^2
U_ef <- 2 * pi / (24 * 60 * 60)
H_ef <- 0
nu_N <- 10
h_N1 <- 1 / nu_N
h_N3 <- h_N1
t_f <- 2 * 60 * 60
t <- seq(
from = 0,
to = t_f,
by = h_N1
)
deg2rad <- function(deg) {
(deg * pi) / 180
}
phi_0 <- deg2rad(27)
lambda_0 <- deg2rad(13)
eps_0 <- deg2rad(0)
inaccuracies_enabled <- 1
b <- 25 * g * 1e-6
g_ef <- 9.815
a_ef <- 6378137
b_ef <- 6356752.3
e_ef <- (a_ef^2 - b_ef^2) / a_ef^2
U_ef <- 2 * pi / (24 * 60 * 60)
H_ef <- 0
nu_N <- 10
h_N1 <- 1 / nu_N
h_N3 <- h_N1
t_f <- 2 * 60 * 60
t <- seq(
from = 0,
to = t_f,
by = h_N1
)
deg2rad <- function(deg) {
(deg * pi) / 180
}
phi_0 <- deg2rad(27)
lambda_0 <- deg2rad(13)
eps_0 <- deg2rad(0)
inaccuracies_enabled <- 1
b <- 25 * g_ef * 1e-6
w_dr <- deg2rad(0.01) / 3600
rotation_enabled <- 0
axis <- 2
rotation_angle <- deg2rad(10)
rotation_start_time <- 60 * 60
rotation_duration < -5
rotation_enabled <- 0
axis <- 2
rotation_angle <- deg2rad(10)
rotation_start_time <- 60 * 60
rotation_duration <- 5
inaccuracies_enabled <- 1
b <- 25 * g_ef * 1e-6
w_dr <- deg2rad(0.01) / 3600
rotation_enabled <- 0
axis <- 2
rotation_angle <- deg2rad(10)
rotation_start_time <- 60 * 60
rotation_duration <- 5
g_ef <- 9.815
a_ef <- 6378137
b_ef <- 6356752.3
e_ef <- (a_ef^2 - b_ef^2) / a_ef^2
U_ef <- 2 * pi / (24 * 60 * 60)
H_ef <- 0
nu_N <- 10
h_N1 <- 1 / nu_N
h_N3 <- h_N1
t_f <- 2 * 60 * 60
t <- seq(
from = 0,
to = t_f,
by = h_N1
)
deg2rad <- function(deg) {
(deg * pi) / 180
}
phi_0 <- deg2rad(27)
lambda_0 <- deg2rad(13)
eps_0 <- deg2rad(0)
inaccuracies_enabled <- 1
b <- 25 * g_ef * 1e-6
w_dr <- deg2rad(0.01) / 3600
g_ef <- 9.815
a_ef <- 6378137
b_ef <- 6356752.3
e_ef <- (a_ef^2 - b_ef^2) / a_ef^2
U_ef <- 2 * pi / (24 * 60 * 60)
H_ef <- 0
nu_N <- 10
h_N1 <- 1 / nu_N
h_N3 <- h_N1
t_f <- 2 * 60 * 60
t <- seq(
from = 0,
to = t_f,
by = h_N1
)
deg2rad <- function(deg) {
(deg * pi) / 180
}
phi_0 <- deg2rad(27)
lambda_0 <- deg2rad(13)
eps_0 <- deg2rad(0)
inaccuracies_enabled <- 1
b <- 25 * g_ef * 1e-6
w_dr <- deg2rad(0.01) / 3600
rotation_enabled <- 0
axis <- 2
rotation_angle <- deg2rad(10)
rotation_start_time <- 60 * 60
rotation_duration <- 5
sum_Wx <- 0
sum_Wy <- 0
sum_Kx <- 0
sum_Ky <- 0
Q_f <- matrix(
data = c(1, 0, 0, 0),
nrow = 1,
ncol = 4
)
omega <- matrix(
data = c(0, 0, 0),
nrow = 3,
ncol = 1
)
psi <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
)
theta <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
)
gamma <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
)
heading <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
)
V <- matrix(
data = 0,
nrow = 3,
ncol = length(time)
)
U <- matrix(
data = 0,
nrow = 3,
ncol = length(time)
)
V_N <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
)
V_E <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
)
phi <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
) + phi_0
lambda <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
) + lambda_0
eps <- matrix(
data = 0,
nrow = 1,
ncol = length(time)
) + eps_0
gyr_N <- matrix(
data = c(0, U_ef * cos(phi_0), U_ef * sin(phi_0)),
nrow = 3,
ncol = 1
)
acc_N <- matrix(
data = c(0, 0, g_ef),
nrow = 3,
ncol = 1
)
C_B2N <- diag(3)
B_E2N <- matrix(
data = 0,
nrow = 3,
ncol = 3
)
B_E2N[1, 1] <- -sin(phi_0) * cos(lambda_0) * sin(eps_0) - sin(lambda_0) * cos(eps_0)
B_E2N[1, 2] <- sin(phi_0) * sin(lambda_0) * sin(eps_0) + cos(lambda_0) * cos(eps_0)
B_E2N[1, 3] <- cos(phi_0) * sin(eps_0)
B_E2N[2, 1] <- -sin(phi_0) * cos(lambda_0) * cos(eps_0) + sin(lambda_0) * sin(eps_0)
B_E2N[2, 2] <- -sin(phi_0) * sin(lambda_0) * cos(eps_0) - cos(lambda_0) * sin(eps_0)
B_E2N[2, 3] <- cos(phi_0) * cos(eps_0)
B_E2N[3, 1] <- cos(phi_0) * cos(lambda_0)
B_E2N[3, 2] <- cos(phi_0) * sin(lambda_0)
B_E2N[3, 3] <- sin(phi_0)
B_PE2N <- B_E2N
i <- matrix(
data = c(1, 2, 3),
nrow = 1,
ncol = 3
)
j <- matrix(
data = c(4, 5, 6),
nrow = 3,
ncol = 1
)
gyr_B <- t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled
for (i in 1 : length(t)) {
print(i)
}
gyr_b_mod <- c()
for (i in 1 : 10) {
gyr_b_mod <- cbind(gyr_b_mod, t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled)
}
gyr_b_mod <- c()
for (i in 1 : 10) {
gyr_b_mod <- cbind(gyr_b_mod, t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled)
}
print(gyr_b_mod)
gyr_b_mod <- c()
acc_b_mod <- c()
for (i in 1 : length(t) - 1) {
gyr_b_mod <- cbind(gyr_b_mod, t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled)
acc_b_mod <- cbind(acc_b_mod, t(C_B2N) %*% acc_N + b * inaccuracies_enabled)
}
gyr_b_mod <- c()
acc_b_mod <- c()
for (i in 1 : length(t) - 1) {
gyr_b_mod <- cbind(gyr_b_mod, t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled)
acc_b_mod <- cbind(acc_b_mod, t(C_B2N) %*% acc_N + b * inaccuracies_enabled)
if ((i >= nu_N * rotation_start_time) & (i <= nu_N * (rotation_duration + rotation_start_time)) & (rotation_enabled == 1)) {
gyr_b_mod[axis, i] <- gyr_b_mod[axis, i] + rotation_angle / rotation_duration
}
}
gyr_b_mod <- c()
acc_b_mod <- c()
for (i in 1 : length(t) - 1) {
# 1
gyr_b_mod <- cbind(gyr_b_mod, t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled)
acc_b_mod <- cbind(acc_b_mod, t(C_B2N) %*% acc_N + b * inaccuracies_enabled)
if ((i >= nu_N * rotation_start_time) & (i <= nu_N * (rotation_duration + rotation_start_time)) & (rotation_enabled == 1)) {
gyr_b_mod[axis, i] <- gyr_b_mod[axis, i] + rotation_angle / rotation_duration
}
# 2
gyr_b_inc <- gyr_b_mod[, gyr_b_mod[i]] * h_N1
acc_b_inc <- acc_b_mod[, acc_b_mod[i]] & h_N1
}
gyr_b_mod <- c()
acc_b_mod <- c()
for (i in 1 : length(t) - 1) {
# 1
gyr_b_mod <- cbind(gyr_b_mod, t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled)
acc_b_mod <- cbind(acc_b_mod, t(C_B2N) %*% acc_N + b * inaccuracies_enabled)
if ((i >= nu_N * rotation_start_time) & (i <= nu_N * (rotation_duration + rotation_start_time)) & (rotation_enabled == 1)) {
gyr_b_mod[axis, i] <- gyr_b_mod[axis, i] + rotation_angle / rotation_duration
}
# 2
gyr_b_inc <- gyr_b_mod[, i] * h_N1
acc_b_inc <- acc_b_mod[, i] & h_N1
}
gyr_b_mod <- c()
acc_b_mod <- c()
for (i in 1 : length(t) - 1) {
# 1
gyr_b_mod <- cbind(gyr_b_mod, t(C_B2N) %*% gyr_N + w_dr * inaccuracies_enabled)
acc_b_mod <- cbind(acc_b_mod, t(C_B2N) %*% acc_N + b * inaccuracies_enabled)
if ((i >= nu_N * rotation_start_time) & (i <= nu_N * (rotation_duration + rotation_start_time)) & (rotation_enabled == 1)) {
gyr_b_mod[axis, i] <- gyr_b_mod[axis, i] + rotation_angle / rotation_duration
}
# 2
gyr_b_inc <- gyr_b_mod[, i] * h_N1
acc_b_inc <- acc_b_mod[, i] * h_N1
}
